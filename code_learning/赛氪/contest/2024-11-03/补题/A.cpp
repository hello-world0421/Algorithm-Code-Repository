#include <bits/stdc++.h>
using i64 = long long;

const i64 cnt_3[] = { 3, 9, 27, 81, 243, 729, 2187, 6561, 19683, 59049, 177147, 531441, 1594323, 4782969, 14348907, 43046721, 129140163, 387420489, 1162261467, 3486784401, 10460353203, 31381059609, 94143178827, 282429536481, 847288609443, 2541865828329, 7625597484987, 22876792454961, 68630377364883, 205891132094649, 617673396283947, 1853020188851841, 5559060566555523, 16677181699666569, 50031545098999707, 150094635296999121, 450283905890997363, 1350851717672992089 };

const i64 cnt_5[] = { 5, 25, 125, 625, 3125, 15625, 78125, 390625, 1953125, 9765625, 48828125, 244140625, 1220703125, 6103515625, 30517578125, 152587890625, 762939453125, 3814697265625, 19073486328125, 95367431640625, 476837158203125, 2384185791015625, 11920928955078125, 59604644775390625, 298023223876953125, 1490116119384765625 };

std::vector<i64> res;
void init() {
    for (int i = 0; i < 38; i++) {
        for (int j = 0; j < 26; j++) {
            res.push_back(cnt_3[i] + cnt_5[j]);
        }
    }
    std::sort(res.begin(), res.end());
}

void solve() {
    int n; std::cin >> n;
    int ans = -1, mid, l = 0, r = res.size();
    while (l <= r) {
        mid = l + ((r - l) >> 1);
        if (res[mid] == n) {
            ans = mid; break;
        } else if (res[mid] < n) {
            l = mid + 1;
        } else {
            r = mid - 1;
        }
    }
    std::cout << (ans == -1 ? "No" : "Yes") << '\n';
}

int main() {
    std::cin.tie(nullptr)->sync_with_stdio(false);

    init();
    int tt; std::cin >> tt;
    while (tt--) {
        solve();
    }
}